{
    "patches": [
        {
            "label": "2025-08-07_19-52-45",
            "content": "@@ -1168,24 +1168,68 @@\n ) %7B%0A        \n+for (int i = 0; i %3C vet.get(); )%7B%0A%0A        %7D\n %0A    %7D%0A%0A    \n",
            "lines": "118"
        },
        {
            "label": "2025-08-07_19-52-54",
            "content": "@@ -1168,34 +1168,24 @@\n ) %7B%0A        \n-return %22%22;\n %0A    %7D%0A%0A    \n",
            "lines": "116"
        },
        {
            "label": "2025-08-07_19-53-18",
            "content": "@@ -710,25 +710,24 @@\n / vet.size()\n-;\n %0A    %7D%0A%0A    \n",
            "lines": "116"
        },
        {
            "label": "2025-08-07_19-53-27",
            "content": "@@ -530,17 +530,16 @@\n turn sum\n-;\n %0A    %7D%0A%0A\n",
            "lines": "116"
        },
        {
            "label": "2025-08-07_19-53-38",
            "content": "import java.util.List;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.DecimalFormat;\n\nclass Student {\n\n    public static int count(List<Integer> vet, int value) {\n        int count = 0;\n        for (Integer i: vet){\n            if (vet.get(i) == value){\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static int sum(List<Integer> vet) {\n        int sum = 0;\n        for (Integer i: vet){\n            sum += (i *= -1);\n        }\n        return sum;\n    }\n\n    public static double average(List<Integer> vet) {\n        int sum = 0;\n        for (Integer i: vet){\n            sum += (i *= -1);\n        }\n        return sum / vet.size();\n    }\n\n    public static String moreMen(List<Integer> vet) {\n        int men = 0;\n        for (Integer i: vet){\n            if (i > 0){\n                men++;\n            }\n        }\n        int women = men - vet.size();\n        if (women > men){\n            return \"women\";\n        }else if(women < men){\n            return \"men\";\n        }else{\n            return \"draw\";\n        }\n    }\n\n    public static String halfCompare(List<Integer> vet) {\n        return \"\";\n    }\n\n    public static String sexBattle(List<Integer> vet) {\n        return \"\";\n    }\n}\n\n\npublic class Shell {\n    public static void main(String[] _args) {\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n            \n            var args = line.split(\" \");\n            var cmd = args[0];\n            \n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (args[0].equals(\"count\")) {\n                int result = Student.count(strToVet(args[1]), Integer.parseInt(args[2]));\n                System.out.println(\"\" + result);\n            }\n            else if (args[0].equals(\"half_compare\")) {\n                String result = Student.halfCompare(strToVet(args[1]));\n                System.out.println(result);\n            }\n            else if (args[0].equals(\"sex_battle\")) {\n                String result = Student.sexBattle(strToVet(args[1]));\n                System.out.println(result);\n            }\n            else if (args[0].equals(\"sum\")) {\n                int result = Student.sum(strToVet(args[1]));\n                System.out.println(\"\" + result);\n            }\n            else if (args[0].equals(\"average\")) {\n                DecimalFormat df = new DecimalFormat(\"0.00\");\n                String result = df.format(Student.average(strToVet(args[1])));\n                System.out.println(result);\n            }\n            else if (args[0].equals(\"more_men\")) {\n                String result = Student.moreMen(strToVet(args[1]));\n                System.out.println(result);\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    public static List<Integer> strToVet(String s) {\n        if (s.length() == 2) return new ArrayList<>();\n        List<String> parts = Arrays.asList(s.substring(1, s.length() - 1).split(\",\"));\n        List<Integer> result = new ArrayList<>();\n        for (String part : parts) {\n            result.add(Integer.parseInt(part.trim()));\n        }\n        return result;\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
            "lines": "116"
        }
    ]
}